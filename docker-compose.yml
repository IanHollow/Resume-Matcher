services:
  backend:
    build:
      context: ./apps/backend
      dockerfile: Dockerfile
    container_name: resume-matcher-backend
    ports:
      - "8000:8000"
    environment:
      OLLAMA_HOST: "http://host.docker.internal:11434"
      SESSION_SECRET_KEY: a-secret-key-for-production-change-this
      SYNC_DATABASE_URL: sqlite:///./data/app.db
      ASYNC_DATABASE_URL: sqlite+aiosqlite:///./data/app.db
      PYTHONDONTWRITEBYTECODE: 1
    volumes:
      - sqlite-data:/usr/src/app/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s

  frontend:
    build:
      context: ./apps/frontend
      dockerfile: Dockerfile
      args:
        NEXT_PUBLIC_API_URL: http://localhost:8000
    container_name: resume-matcher-frontend
    ports:
      - "3000:3000"
    environment:
      NODE_ENV: production
      NEXT_PUBLIC_API_URL: http://localhost:8000
    depends_on:
      backend:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test:
        [
          "CMD",
          "wget",
          "--no-verbose",
          "--tries=1",
          "--spider",
          "http://localhost:3000",
        ]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s

volumes:
  sqlite-data:
